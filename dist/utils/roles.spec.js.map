{"version":3,"sources":["../../src/utils/roles.spec.js"],"names":[],"mappings":"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","file":"roles.spec.js","sourcesContent":["import { Roles } from './roles';\n\ndescribe('[SecurityRoles]', function() {\n\n\tdescribe('no handler', function() {\n\n\t\tvar roles = new Roles();\n\n\t\tit('should be null', function() {\n\t\t\treturn expect(roles.can({}, 'any'))\n\t\t\t\t.to.eventually.be.null;\n\t\t});\n\t});\n\n\tdescribe('simple scenarios', function() {\n\n\t\tvar roles;\n\n\t\tbeforeEach(function() {\n\t\t\troles = new Roles();\n\t\t\troles.use('administrate', function() {\n\t\t\t\treturn this.userRole === 'admin';\n\t\t\t});\n\t\t});\n\n\t\tit('should grant', function() {\n\t\t\treturn expect(roles.can({ userRole: 'admin' }, 'administrate'))\n\t\t\t\t.to.eventually.be.true;\n\t\t});\n\n\t\tit('should deny', function() {\n\t\t\treturn expect(roles.can({ userRole: 'plouc' }, 'administrate'))\n\t\t\t\t.to.eventually.be.false;\n\t\t});\n\n\t\tit('should be null if none matched', function() {\n\t\t\treturn expect(roles.can({ userRole: 'plouc' }, 'unknown permission'))\n\t\t\t\t.to.eventually.be.null;\n\t\t});\n\n\t\tit('should work without context', function() {\n\t\t\treturn expect(roles.can({}, 'unknown permission'))\n\t\t\t\t.to.eventually.be.null;\n\t\t});\n\n\t\tdescribe('with wildcard', function() {\n\n\t\t\tbeforeEach(function() {\n\t\t\t\troles.use(function() {\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tit('should grant', function() {\n\t\t\t\treturn expect(roles.can({ userRole: 'admin' }, 'administrate'))\n\t\t\t\t\t.to.eventually.be.true;\n\t\t\t});\n\n\t\t\tit('should deny', function() {\n\t\t\t\treturn expect(roles.can({ userRole: 'plouc' }, 'administrate'))\n\t\t\t\t\t.to.eventually.be.false;\n\t\t\t});\n\n\t\t\tit('should be false if none matched', function() {\n\t\t\t\treturn expect(roles.can({ userRole: 'plouc' }, 'unknown permission'))\n\t\t\t\t\t.to.eventually.be.true;\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe('promised scenarios', function() {\n\n\t\tvar roles;\n\n\t\tfunction getUser(userId) {\n\t\t\treturn Promise.resolve({ userRole: 'admin' }).timeout(200);\n\t\t}\n\n\t\tbeforeEach(function() {\n\t\t\troles = new Roles();\n\t\t\troles.use('administrate blog', function() {\n\t\t\t\treturn getUser(this.userId)\n\t\t\t\t\t.then((u) => {\n\t\t\t\t\t\treturn u.userRole === 'admin';\n\t\t\t\t\t});\n\t\t\t});\n\t\t\troles.use('read article', function(article) {\n\t\t\t\treturn !article.draft;\n\t\t\t});\n\t\t});\n\n\t\tit('should grant', function() {\n\t\t\treturn expect(roles.can({ userId: 'test' }, 'administrate blog'))\n\t\t\t\t.to.eventually.be.true;\n\t\t});\n\n\t\tit('should deny reading draft article', function() {\n\t\t\treturn expect(roles.can({ userId: 'test' }, 'read article', { draft: true }))\n\t\t\t\t.to.eventually.be.false;\n\t\t});\n\n\t\tit('should grant reading published article', function() {\n\t\t\treturn expect(roles.can({ userId: 'test' }, 'read article', { draft: false }))\n\t\t\t\t.to.eventually.be.true;\n\t\t});\n\n\t\tit('should handle rejected handlers', function() {\n\t\t\troles.use('reject', function() {\n\t\t\t\treturn Promise.reject('bla');\n\t\t\t});\n\t\t\treturn expect(roles.can({ userId: 'test' }, 'reject'))\n\t\t\t\t.to.eventually.be.rejected;\n\t\t});\n\n\t});\n});\n"]}
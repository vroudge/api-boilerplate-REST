{"version":3,"sources":["../../../src/controllers/no-auth/index.spec.js"],"names":[],"mappings":";;AAAA,QAAQ,CAAC,wBAAwB,EAAE,YAAM;AACrC,YAAQ,CAAC,aAAa,EAAE,YAAM;AAC1B,UAAE,CAAC,0CAA0C,EAAE,YAAM;AACjD,mBAAO,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAC1B,MAAM,CAAC,GAAG,CAAC,CAAC;SACpB,CAAC,CAAC;AACH,UAAE,CAAC,oCAAoC,EAAE,YAAM;AAC3C,mBAAO,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAC1B,IAAI,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,CACvB,MAAM,CAAC,GAAG,CAAC,CACX,MAAM,CAAC,UAAC,GAAG,EAAK;AACb,sBAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;aACnD,CAAC,CAAC;SACV,CAAC,CAAC;KACN,CAAC,CAAC;AACH,YAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,YAAM;AAC9B,UAAE,CAAC,wCAAwC,EAAE,YAAM;AAC/C,mBAAO,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CACzB,MAAM,CAAC,GAAG,CAAC,CAAC;SACpB,CAAC,CAAC;AACH,UAAE,CAAC,gCAAgC,EAAE,YAAM;AACvC,mBAAO,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAC1B,IAAI,CAAC,MAAM,CAAC,CACZ,MAAM,CAAC,MAAM,EAAE,cAAc,CAAC,CAC9B,MAAM,CAAC,UAAC,GAAG,EAAK;AACb,uBAAO,OAAO,CAAC,KAAK,iBAAe,GAAG,CAAC,IAAI,CAAC,GAAG,CAAG,CAC7C,IAAI,CAAC,UAAC,IAAI,EAAK;AACZ,2BAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC1B,CAAC,CAAC;aACV,CAAC,CAAC;SAEV,CAAC,CAAC;KACN,CAAC,CAAC;AACH,YAAQ,CAAC,aAAa,EAAE,YAAM;AAC1B,UAAE,CAAC,6BAA6B,EAAE,YAAM;AACpC,mBAAO,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAC1B,IAAI,CAAC,MAAM,CAAC,CACZ,MAAM,CAAC,MAAM,EAAE,cAAc,CAAC,CAC9B,MAAM,CAAC,GAAG,CAAC,CACX,MAAM,CAAC,UAAC,GAAG,EAAK;AACb,sBAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;aAC1C,CAAC,CAAC;SACV,CAAC,CAAC;KACN,CAAC,CAAC;CACN,CAAC,CAAC","file":"index.spec.js","sourcesContent":["describe('[Controller - NO-AUTH]', () => {\n    describe('POST - user', () => {\n        it('Returns an error if no email is provided', () => {\n            return request('post', '/user')\n                .expect(400);\n        });\n        it('Returns a token if uid is provided', () => {\n            return request('post', '/user')\n                .send({ uid: 'abc123' })\n                .expect(200)\n                .expect((res) => {\n                    expect(res.body).to.have.keys(['uid', 'token']);\n                });\n        });\n    });\n    describe.only('GET - file', () => {\n        it('returns an error if no pid is provided', () => {\n            return request('get', '/file')\n                .expect(400);\n        });\n        it('gets a file if pid is provided', () => {\n            return request('post', '/file')\n                .type('form')\n                .attach('file', 'package.json')\n                .expect((res) => {\n                    return request('get', `/file?pid=${res.body.pid}`)\n                        .then((data) => {\n                            console.log(data.body);\n                        });\n                });\n\n        });\n    });\n    describe('POST - file', () => {\n        it('sends the file and saves it', () => {\n            return request('post', '/file')\n                .type('form')\n                .attach('file', 'package.json')\n                .expect(200)\n                .expect((res) => {\n                    expect(res.body.pid).to.be.a('string');\n                });\n        });\n    });\n});\n"]}
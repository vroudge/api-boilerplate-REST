{"version":3,"sources":["../../src/controllers/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;IAEY,QAAQ;;;;IACR,WAAW;;;;;;;;;;;;;;;;;;AAKvB,IAAI,MAAM,GAAG,IAAI,kBAAQ,MAAM,EAAE,CAAC;;AAElC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAC7B,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;;AAExC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC;;;;;;AAAC,AAM5B,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAK;AACnC,IAAG,CAAC,KAAK,CAAC;AACT,KAAG,EAAE,aAAa;AAClB,SAAO,EAAE,OAAO;AAChB,aAAW,EAAE,gCAAgC;EAC7C,CAAC,CAAC;CACH,CAAC;;;;AAAC,AAIH,MAAM,CAAC,GAAG,CAAC,GAAG,mBAAS;;;;AAAC,AAIxB,MAAM,CAAC,GAAG,CAAC,OAAO,iBAAO;;;;;;;;AAAC,AAQ1B,MAAM,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAK;AAC9B,KAAI,CAAC,IAAI,gBAAM,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;CAChD,CAAC;;;AAAC,AAGH,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;;kBAEf,MAAM","file":"index.js","sourcesContent":["import express from 'express';\nimport error from '../utils/error';\nimport * as passport from 'passport';\nimport * as middlewares from './middlewares';\nimport noAuth from './no-auth';\nimport auth from './auth';\nimport conf from '../conf';\n\nvar router = new express.Router();\n\nrouter.use(middlewares.rest);\nrouter.use(middlewares.securityHeaders);\n\nmiddlewares.useCors(router);\n\n/**********/\n\n//HANDSHAKE\n/**********/\nrouter.get('/', (req, res, next) => {\n\tres.shoot({\n\t\tAPI: 'AmberFS-API',\n\t\tVersion: '0.0.1',\n\t\tDescription: 'Encryption manager for AmberFS'\n\t});\n});\n\n//PUBLIC\n/*******/\nrouter.use('/', noAuth);\n\n//PRIVATE\n/********/\nrouter.use('/auth', auth);\n\n//#############################################\n// ERRORS HANDLING\n//#############################################\n\n// no route matched so far so\n// catch 404 and forward to error handler\nrouter.use((req, res, next) => {\n\tnext(new error.EndpointNotFoundError(req.path));\n});\n\n// error generic handler\nrouter.use(middlewares.error);\n\nexport default router;\n"]}